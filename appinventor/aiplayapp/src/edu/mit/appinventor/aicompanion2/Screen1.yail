#|
$Source $Yail
|#

(define-repl-form edu.mit.appinventor.aicompanion2.Screen1 Screen1)
(require <com.google.youngandroid.runtime>)
(def (Setup)
(set-var! ipaddress  (call-component-method 'PhoneStatus1 'GetWifiIpAddress (*list-for-runtime*)
 '())
)

(set-and-coerce-property! 'iplabel 'Text (get-var ipaddress)
 'text)

(set-and-coerce-property! 'Button1 'Enabled #t 'boolean)

(set-and-coerce-property! 'ScanButton 'Enabled #t 'boolean)

(set-and-coerce-property! 'RetryButton 'Visible #f 'boolean)

(if (call-yail-primitive yail-not (*list-for-runtime* (call-component-method 'PhoneStatus1 'isConnected (*list-for-runtime*)
 '())
)
 '( boolean)
 "not")
 (begin (set-and-coerce-property! 'ConnectFailLabel 'Visible #t 'boolean)

)
 (begin (set-and-coerce-property! 'ConnectFailLabel 'Visible #f 'boolean)

)
)

 )
(def expired #f)

(def (PostData)
(set-and-coerce-property! 'Web1 'Url (call-yail-primitive string-append (*list-for-runtime* "http://" (call-yail-primitive string-append (*list-for-runtime* "rendezvous.appinventor.mit.edu" "/rendezvous/")
 '( text text)
 "join")
)
 '( text text)
 "join")
 'text)

(call-component-method 'Web1 'PostText (*list-for-runtime* (call-component-method 'Web1 'BuildRequestData (*list-for-runtime* (call-yail-primitive make-yail-list (*list-for-runtime* (call-yail-primitive make-yail-list (*list-for-runtime* "key" (get-property 'code 'Text)
)
 '( any any)
 "make a list")
 (call-yail-primitive make-yail-list (*list-for-runtime* "ipaddr" (get-var ipaddress)
)
 '( any any)
 "make a list")
 (call-yail-primitive make-yail-list (*list-for-runtime* "port" "9997")
 '( any any)
 "make a list")
)
 '( any any any)
 "make a list")
)
 '( list)
)
)
 '( text)
)

(call-component-method 'code 'HideKeyboard (*list-for-runtime*)
 '())

 )
(def ipaddress "IPADDRESS")

(def (badversion)
(set-var! expired  #t)

(set-and-coerce-property! 'Expireblock 'Visible #t 'boolean)

(set-and-coerce-property! 'RetryButton 'Visible #f 'boolean)

 )
;;; Screen1
(do-after-form-creation (set-and-coerce-property! 'Screen1 'ScreenOrientation "portrait" 'text)
(set-and-coerce-property! 'Screen1 'Scrollable #f 'boolean)
(set-and-coerce-property! 'Screen1 'Title "MIT AICompanion" 'text)
(set-and-coerce-property! 'Screen1 'VersionCode 207 'number)
(set-and-coerce-property! 'Screen1 'VersionName "2.07" 'text)
)
(define-event Screen1 Initialize()
 (set-this-form)
 ((get-var Setup))

)
(define-event Screen1 ErrorOccurred( component  functionName  errorNumber  message )
 (set-this-form)
 (set-and-coerce-property! 'Label8 'Visible #t 'boolean)

(if (call-yail-primitive yail-equal? (*list-for-runtime* (lexical-value errorNumber)
 1501)
 '( any any)
 "=")
 (begin (set-and-coerce-property! 'Label8 'Text "Your phone does not appear to have a Bar Code Scanning Application Installed." 'text)

)
 (begin (set-and-coerce-property! 'Label8 'Text "An Error Occurred. Please try pressing \"Connect to App Inventor\" again." 'text)

)
)

((get-var Setup))

)
;;; HorizontalArrangement2
(add-component Screen1 HorizontalArrangement HorizontalArrangement2 (set-and-coerce-property! 'HorizontalArrangement2 'Width -2 'number)
)
;;; Label1
(add-component HorizontalArrangement2 Label Label1 (set-and-coerce-property! 'Label1 'FontSize 12.0 'number)
(set-and-coerce-property! 'Label1 'Text "Your IP Address: " 'text)
)
;;; iplabel
(add-component HorizontalArrangement2 Label iplabel (set-and-coerce-property! 'iplabel 'Text "IP ADDRESS" 'text)
(set-and-coerce-property! 'iplabel 'Width -2 'number)
)
;;; Label2
(add-component Screen1 Label Label2 (set-and-coerce-property! 'Label2 'FontSize 12.0 'number)
(set-and-coerce-property! 'Label2 'Text "Directions: \n1) On the Blocks Editor, press \"Connect to Device\" and select WiFi.\n2) Type the 6-letter code or scan the QR code displayed on the Blocks Editor.\n3) Click the 'Connect to App Inventor' button below.\n4) If not connected in 30 seconds, click reset and repeat steps 1-4." 'text)
(set-and-coerce-property! 'Label2 'Width -2 'number)
)
;;; Label6
(add-component Screen1 Label Label6 (set-and-coerce-property! 'Label6 'Text "        " 'text)
(set-and-coerce-property! 'Label6 'Width -2 'number)
)
;;; ScanButton
(add-component Screen1 Button ScanButton (set-and-coerce-property! 'ScanButton 'Text "Scan the QR Code" 'text)
(set-and-coerce-property! 'ScanButton 'Width -2 'number)
)
(define-event ScanButton Click()
 (set-this-form)
 (set-and-coerce-property! 'Label8 'Visible #f 'boolean)

(call-component-method 'BarcodeScanner1 'DoScan (*list-for-runtime*)
 '())

)
;;; HorizontalArrangement1
(add-component Screen1 HorizontalArrangement HorizontalArrangement1 (set-and-coerce-property! 'HorizontalArrangement1 'Width -2 'number)
)
;;; code
(add-component HorizontalArrangement1 TextBox code (set-and-coerce-property! 'code 'Hint "Or type the 6-letter code here." 'text)
(set-and-coerce-property! 'code 'Width -2 'number)
)
;;; Button1
(add-component Screen1 Button Button1 (set-and-coerce-property! 'Button1 'Text "Connect to App Inventor" 'text)
(set-and-coerce-property! 'Button1 'Width -2 'number)
)
(define-event Button1 Click()
 (set-this-form)
 (if (call-yail-primitive yail-not (*list-for-runtime* (get-var expired)
)
 '( boolean)
 "not")
 (begin (if (call-yail-primitive yail-equal? (*list-for-runtime* (call-yail-primitive string-length (*list-for-runtime* (get-property 'code 'Text)
)
 '( text)
 "length")
 6)
 '( any any)
 "=")
 (begin ((get-var PostData))
	((get-var *start-httpd*))

(set-and-coerce-property! 'Button1 'Enabled #f 'boolean)

(set-and-coerce-property! 'ScanButton 'Enabled #f 'boolean)

(set-and-coerce-property! 'RetryButton 'Visible #t 'boolean)

(set-and-coerce-property! 'HorizontalArrangement5 'Visible #f 'boolean)

(set-and-coerce-property! 'Label8 'Visible #f 'boolean)

)
 (begin (set-and-coerce-property! 'HorizontalArrangement5 'Visible #t 'boolean)

)
)

)
)

)
;;; Label8
(add-component Screen1 Label Label8 (set-and-coerce-property! 'Label8 'TextColor #xFFFF0000 'number)
(set-and-coerce-property! 'Label8 'Visible #f 'boolean)
)
;;; HorizontalArrangement5
(add-component Screen1 HorizontalArrangement HorizontalArrangement5 (set-and-coerce-property! 'HorizontalArrangement5 'Visible #f 'boolean)
)
;;; Label7
(add-component HorizontalArrangement5 Label Label7 (set-and-coerce-property! 'Label7 'Text "You did not enter 6 characters, please try again." 'text)
(set-and-coerce-property! 'Label7 'TextColor #xFFFF0000 'number)
)
;;; RetryButton
(add-component Screen1 Button RetryButton (set-and-coerce-property! 'RetryButton 'Text "Reset" 'text)
(set-and-coerce-property! 'RetryButton 'Visible #f 'boolean)
(set-and-coerce-property! 'RetryButton 'Width -2 'number)
)
(define-event RetryButton Click()
 (set-this-form)
 ((get-var Setup))

)
;;; HorizontalArrangement3
(add-component Screen1 HorizontalArrangement HorizontalArrangement3 (set-and-coerce-property! 'HorizontalArrangement3 'Visible #f 'boolean)
)
;;; Label3
(add-component HorizontalArrangement3 Label Label3 (set-and-coerce-property! 'Label3 'Text "Or you Can Scan a Bar Code" 'text)
(set-and-coerce-property! 'Label3 'Visible #f 'boolean)
)
;;; HorizontalArrangement4
(add-component Screen1 HorizontalArrangement HorizontalArrangement4 (set-and-coerce-property! 'HorizontalArrangement4 'Visible #f 'boolean)
)
;;; Label4
(add-component HorizontalArrangement4 Label Label4 (set-and-coerce-property! 'Label4 'Text "If the Blocks Editor is already running" 'text)
)
;;; RestartButton
(add-component HorizontalArrangement4 Button RestartButton (set-and-coerce-property! 'RestartButton 'Text "Restart" 'text)
)
(define-event RestartButton Click()
 (set-this-form)
 ((get-var *start-httpd*))
 ((get-var *start-repl*))

)
;;; ConnectFailLabel
(add-component Screen1 Label ConnectFailLabel (set-and-coerce-property! 'ConnectFailLabel 'Text "Your phone does not appear to be connected to a Wireless (WiFi) network." 'text)
(set-and-coerce-property! 'ConnectFailLabel 'TextColor #xFFFF0000 'number)
(set-and-coerce-property! 'ConnectFailLabel 'Visible #f 'boolean)
)
;;; Expireblock
(add-component Screen1 VerticalArrangement Expireblock (set-and-coerce-property! 'Expireblock 'AlignHorizontal 3 'number)
(set-and-coerce-property! 'Expireblock 'Visible #f 'boolean)
)
;;; expirewarning
(add-component Expireblock Label expirewarning (set-and-coerce-property! 'expirewarning 'Text "This version of the App Inventor Companion is not compatible with your blocks editor. You can download a new version from the Play Store" 'text)
(set-and-coerce-property! 'expirewarning 'TextColor #xFFFF0000 'number)
)
;;; MarketButton
(add-component Expireblock Button MarketButton (set-and-coerce-property! 'MarketButton 'Text "Go to the Play Store" 'text)
)
(define-event MarketButton Click()
 (set-this-form)
 (call-component-method 'ActivityStarter1 'StartActivity (*list-for-runtime*)
 '())

)
;;; Web1
(add-component Screen1 Web Web1 (set-and-coerce-property! 'Web1 'Url "http://osiris.mit.edu/rendezvous/" 'text)
)
;;; Clock1
(add-component Screen1 Clock Clock1 )
;;; BarcodeScanner1
(add-component Screen1 BarcodeScanner BarcodeScanner1 )
(define-event BarcodeScanner1 AfterScan( result )
 (set-this-form)
 (if (call-yail-primitive yail-not (*list-for-runtime* (get-var expired)
)
 '( boolean)
 "not")
 (begin (set-and-coerce-property! 'code 'Text (lexical-value result)
 'text)

((get-var PostData))
((get-var *start-httpd*))

(set-and-coerce-property! 'RetryButton 'Visible #t 'boolean)

(set-and-coerce-property! 'Button1 'Enabled #f 'boolean)

(set-and-coerce-property! 'ScanButton 'Enabled #f 'boolean)

)
)

)
;;; TinyDB1
(add-component Screen1 TinyDB TinyDB1 )
;;; ActivityStarter1
(add-component Screen1 ActivityStarter ActivityStarter1 (set-and-coerce-property! 'ActivityStarter1 'Action "android.intent.action.VIEW" 'text)
(set-and-coerce-property! 'ActivityStarter1 'DataUri "market://details?id=edu.mit.appinventor.aicompanion2" 'text)
)
;;; PhoneStatus1
(add-component Screen1 PhoneStatus PhoneStatus1 )

(def *httpd-started* #f)		;; only start the http daemon once!
(def (*start-httpd*)
  (let ((topform Screen1:topform))
    (if (get-var *httpd-started*) 'ok
      (begin (topform:startHTTPD)
	     (set-var! *httpd-started* #t)))))

(def *repl-started* #f)		;; only start the TelnetRepl daemon once!
(def (*start-repl*)
  (let ((topform Screen1:topform))
    (if (get-var *repl-started*) 'ok
      (begin (topform:startRepl)
	     (set-var! *repl-started* #t)))))

(init-runtime)
